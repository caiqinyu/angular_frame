<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring Database配置</description>

	<!-- spring启动时扫描项目路径下的properties文件 -->
	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- dataSourse连接池相关属性，代码不在此贴出，会放在打包好的项目里面 -->
				<value>classpath:database.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSourceDBCP" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverClass}" />
		<property name="url" value="${db.jdbcUrl}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />

		<!-- 连接池属性 -->
		<!-- <property name="initialSize" value="${db.initialSize}" /> -->
		<property name="maxIdle" value="${db.maxIdle}" />
		<property name="maxActive" value="${db.maxActive}" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 配置获取连接等待超时的时间 -->
		<!-- <property name="maxWait" value="${db.maxWait}" /> -->
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
	</bean>

	<!-- 数据源配置,使用应用服务器的数据库连接池 -->
	<jee:jndi-lookup id="dataSourceJNDI" jndi-name="${db.jndiName}"
		proxy-interface="javax.sql.DataSource" lookup-on-startup="false"
		resource-ref="true" />

	<bean id="FrameDataSource" class="com.frame.base.common.FrameDataSource">
		<property name="dataSource">
			<ref bean="${db.dataSource}" />
		</property>
	</bean>

	<!-- 定义实体管理器工厂 Jpa配置 LocalContainerEntityManagerFactoryBean这个选项Spring扮演了容器的角色。完全掌管JPA -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="FrameDataSource" />
		<!-- 指定Jpa持久化实现厂商类,这里以Hibernate为例 -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<!-- 指定Entity实体类包路径 -->
		<property name="packagesToScan" value="com.frame" />
		<!-- 指定JPA属性；如Hibernate中指定是否显示SQL的是否显示、方言等 -->
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">${db.showSql}</prop>
				<prop key="hibernate.format_sql">${db.formatSql}</prop>
				<prop key="hibernate.hbm2ddl.auto">validate</prop>
			</props>
		</property>
	</bean>

	<!-- Hibernate对Jpa的实现 高级设置 -->
	<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="com.frame.base.utils.DialectUtils">
				<constructor-arg ref="FrameDataSource" />
			</bean>
		</property>
	</bean>

	<!-- Jpa 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- 重要配置：启用扫描并自动创建代理的功能，扫描base-package下所有继承于Repository<T,ID>的接口 -->
	<jpa:repositories base-package="com.frame"
		transaction-manager-ref="transactionManager"
		entity-manager-factory-ref="entityManagerFactory" />

	<!-- 启用对事务注解的支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 自动注入entityManager，保证@PersistenceContext可用 -->
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="jdbcBaseDAO" class="com.frame.base.repository.jdbc.JDBCBaseDAO">
		<property name="dataSource">
			<ref bean="${db.dataSource}" />
		</property>
	</bean>
</beans>